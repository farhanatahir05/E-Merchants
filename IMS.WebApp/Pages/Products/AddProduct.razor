@page "/addproduct"

@attribute [Authorize]

@inject IAddProductUseCase AddProductUseCase
@inject NavigationManager NavigationManager


<h3>Add Product</h3>
<br />
@if (this.product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Product Name</label>
            <InputText id="name" @bind-Value="product.ProductName" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label for="img">Product Image</label>
            <InputFile id="img" class="form-control" OnChange="@HandleFileSelection" />
        </div>

        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" class="form-control"></InputNumber>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Save</button>

    </EditForm>
}

@code {

    private Product? product;
    private IBrowserFile _selectedFile;
    private string path;
    private string imageNameWithExtension;

    protected override void OnInitialized()
    {
        this.product = new Product();
    }

    private async Task OnValidSubmit()
    {
        if (this.product != null)
        {
            product.ImagePath = $"./AdminLTE/img/{imageNameWithExtension}";
            await AddProductUseCase.ExecuteAsync(this.product);
            NavigationManager.NavigateTo("/products");
        }
    }
    private async Task HandleFileSelection(InputFileChangeEventArgs e)
    {
        imageNameWithExtension = e.File.Name;
        using (var stream = e.File.OpenReadStream())
        {
            // Save the file to the wwwroot/AdminLTE/img directory
            path = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "AdminLTE", "img", e.File.Name);
            using (var fileStream = new FileStream(path, FileMode.Create))
            {
                await stream.CopyToAsync(fileStream);
            }
        }
    }

}